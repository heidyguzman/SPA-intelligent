<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Bienvenida.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Bienvenida.kt" />
              <option name="updatedContent" value="// ...existing imports...&#10;&#10;@Composable&#10;fun Bienvenida(modifier: Modifier = Modifier) {&#10;    Box(&#10;        modifier = modifier&#10;            .requiredWidth(width = 412.dp)&#10;            .requiredHeight(height = 917.dp)&#10;    ) {&#10;        // ...existing code...&#10;        // Reemplaza el logo por el nuevo diseño&#10;        Image(&#10;            painter = painterResource(id = R.drawable.nuevo_logo),&#10;            contentDescription = &quot;nuevo logo&quot;,&#10;            contentScale = ContentScale.Crop,&#10;            modifier = Modifier&#10;                .align(alignment = Alignment.TopStart)&#10;                .offset(x = 86.dp, y = 64.dp)&#10;                .requiredWidth(width = 239.dp)&#10;                .requiredHeight(height = 190.dp)&#10;        )&#10;        // Reemplaza el botón por el nuevo diseño&#10;        Box(&#10;            modifier = Modifier&#10;                .align(alignment = Alignment.TopStart)&#10;                .offset(x = 106.dp, y = 730.dp)&#10;                .requiredWidth(width = 230.dp)&#10;                .requiredHeight(height = 73.dp)&#10;        ) {&#10;            // Fondo del botón como imagen&#10;            Image(&#10;                painter = painterResource(id = R.drawable.boton_nuevo),&#10;                contentDescription = &quot;botón nuevo&quot;,&#10;                contentScale = ContentScale.FillBounds,&#10;                modifier = Modifier&#10;                    .requiredWidth(width = 230.dp)&#10;                    .requiredHeight(height = 73.dp)&#10;                    .clip(RoundedCornerShape(30.dp))&#10;            )&#10;            // Texto centrado encima del botón&#10;            Text(&#10;                text = &quot;Iniciar&quot;,&#10;                color = Color.White,&#10;                lineHeight = 1.27.em,&#10;                style = AppTypes.type_M3_title_large,&#10;                modifier = Modifier&#10;                    .align(Alignment.Center)&#10;            )&#10;        }&#10;        // ...existing code...&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/narmocorp/satorispa/views/inicio.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/narmocorp/satorispa/views/inicio.kt" />
              <option name="originalContent" value="package com.narmocorp.satorispa.views&#10;&#10;import androidx.compose.foundation.Image&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.shape.CircleShape&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material3.*&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.Notifications&#10;import androidx.compose.material.icons.filled.Settings&#10;import androidx.compose.material.icons.filled.AccountCircle&#10;import androidx.compose.material.icons.filled.Home&#10;import androidx.compose.material.icons.filled.DateRange&#10;import androidx.compose.material.icons.filled.RoomService&#10;import androidx.compose.material.icons.filled.Nfc&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.clip&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.res.painterResource&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextOverflow&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.dp&#10;import androidx.compose.ui.unit.sp&#10;import com.narmocorp.satorispa.R&#10;import com.narmocorp.satorispa.models.Usuario&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun Inicio(&#10;    modifier: Modifier = Modifier,&#10;    usuario: Usuario? = null, // Nuevo parámetro&#10;    onNavigateToNotifications: (() -&gt; Unit)? = null,&#10;    onNavigateToConfig: (() -&gt; Unit)? = null // Nuevo parámetro para ajustes&#10;) {&#10;    Scaffold(&#10;        topBar = {&#10;            TopAppBar(&#10;                title = {&#10;                    Box(modifier = Modifier.fillMaxWidth(), contentAlignment = Alignment.Center) {&#10;                        Image(&#10;                            painter = painterResource(id = R.drawable.logo),&#10;                            contentDescription = &quot;logo&quot;,&#10;                            modifier = Modifier.size(80.dp)&#10;                        )&#10;&#10;                    }&#10;                },&#10;                navigationIcon = {&#10;                    IconButton(onClick = { onNavigateToNotifications?.invoke() }) {&#10;                        Icon(&#10;                            imageVector = Icons.Default.Notifications,&#10;                            contentDescription = &quot;Notificaciones&quot;,&#10;                            tint = Color(0xff995d2d),&#10;                        )&#10;                    }&#10;                },&#10;                actions = {&#10;                    IconButton(onClick = { onNavigateToConfig?.invoke() }) {&#10;                        Icon(&#10;                            imageVector = Icons.Default.Settings,&#10;                            contentDescription = &quot;Ajustes&quot;,&#10;                            tint = Color(0xff995d2d)&#10;                        )&#10;                    }&#10;                },&#10;                colors = TopAppBarDefaults.topAppBarColors(&#10;                    containerColor = Color.White&#10;                )&#10;            )&#10;        },&#10;        bottomBar = {&#10;            NavigationBar(&#10;                containerColor = Color(0xffdfbaa2)&#10;            ) {&#10;                NavigationBarItem(&#10;                    icon = {&#10;                        Icon(&#10;                            imageVector = Icons.Default.Home,&#10;                            contentDescription = &quot;Home&quot;,&#10;                            tint = Color(0xff995d2d)&#10;                        )&#10;                    },&#10;                    label = { Text(&quot;Home&quot;, color = Color(0xff995d2d)) },&#10;                    selected = true,&#10;                    onClick = { /* TODO: Home */ }&#10;                )&#10;                NavigationBarItem(&#10;                    icon = {&#10;                        Icon(&#10;                            imageVector = Icons.Default.RoomService,&#10;                            contentDescription = &quot;Servicios&quot;,&#10;                            tint = Color(0xff995d2d)&#10;                        )&#10;                    },&#10;                    label = { Text(&quot;Servicios&quot;, color = Color(0xff995d2d)) },&#10;                    selected = false,&#10;                    onClick = { /* TODO: Servicios */ }&#10;                )&#10;                NavigationBarItem(&#10;                    icon = {&#10;                        Icon(&#10;                            imageVector = Icons.Default.DateRange, // Usar DateRange como alternativo a Event&#10;                            contentDescription = &quot;Citas&quot;,&#10;                            tint = Color(0xff976826)&#10;                        )&#10;                    },&#10;                    label = { Text(&quot;Mis citas&quot;, color = Color(0xff976826)) },&#10;                    selected = false,&#10;                    onClick = { /* TODO: Mis citas */ }&#10;                )&#10;            }&#10;        },&#10;        containerColor = Color.White,&#10;        modifier = modifier.fillMaxSize()&#10;    ) { innerPadding -&gt;&#10;        Column(&#10;            modifier = Modifier&#10;                .padding(innerPadding)&#10;                .fillMaxSize()&#10;                .padding(horizontal = 24.dp),&#10;            horizontalAlignment = Alignment.CenterHorizontally&#10;        ) {&#10;            Spacer(modifier = Modifier.height(32.dp))&#10;            // Avatar&#10;            Box(&#10;                modifier = Modifier&#10;                    .size(120.dp)&#10;                    .clip(CircleShape)&#10;                    .background(Color(0xffdbbba6)),&#10;                contentAlignment = Alignment.Center&#10;            ) {&#10;                Icon(&#10;                    imageVector = Icons.Default.AccountCircle,&#10;                    contentDescription = &quot;Perfil&quot;,&#10;                    tint = Color(0xff1c1b1f),&#10;                    modifier = Modifier.size(100.dp)&#10;                )&#10;            }&#10;            Spacer(modifier = Modifier.height(16.dp))&#10;            Text(&#10;                text = usuario?.nombre ?: &quot;Nombre&quot;,&#10;                style = MaterialTheme.typography.headlineSmall,&#10;                fontWeight = FontWeight.Bold,&#10;                color = Color(0xff1c1b1f)&#10;            )&#10;            Text(&#10;                text = usuario?.apellido ?: &quot;Apellido&quot;,&#10;                style = MaterialTheme.typography.titleLarge,&#10;                color = Color(0xff1c1b1f)&#10;            )&#10;            Text(&#10;                text = usuario?.correo ?: &quot;Correo&quot;,&#10;                style = MaterialTheme.typography.bodyMedium,&#10;                color = Color(0xff1c1b1f).copy(alpha = 0.7f)&#10;            )&#10;            Spacer(modifier = Modifier.height(100.dp)) // Espacio aumentado para bajar el cuadro NFC&#10;            // Card NFC&#10;            Card(&#10;                modifier = Modifier&#10;                    .fillMaxWidth()&#10;                    .height(200.dp),&#10;                shape = RoundedCornerShape(24.dp),&#10;                colors = CardDefaults.cardColors(&#10;                    containerColor = Color(0xff995d2d)&#10;                ),&#10;                elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)&#10;            ) {&#10;                Column(&#10;                    modifier = Modifier&#10;                        .fillMaxSize()&#10;                        .padding(24.dp),&#10;                    horizontalAlignment = Alignment.CenterHorizontally,&#10;                    verticalArrangement = Arrangement.SpaceBetween&#10;                ) {&#10;                    Text(&#10;                        text = &quot;Registra tu entrada&quot;,&#10;                        style = MaterialTheme.typography.titleMedium,&#10;                        fontWeight = FontWeight.Bold,&#10;                        color = Color.White&#10;                    )&#10;                    Box(&#10;                        modifier = Modifier&#10;                            .size(72.dp)&#10;                            .clip(CircleShape)&#10;                            .background(Color(0xffdbbba6)),&#10;                        contentAlignment = Alignment.Center&#10;                    ) {&#10;                        Icon(&#10;                            imageVector = Icons.Default.Nfc,&#10;                            contentDescription = &quot;NFC Icon&quot;,&#10;                            modifier = Modifier.size(42.dp),&#10;                            tint = Color(0xff1c1b1f)&#10;                        )&#10;                    }&#10;                    Text(&#10;                        text = &quot;Acerque su dispositivo al lector para realizar el registro de entrada&quot;,&#10;                        style = MaterialTheme.typography.bodySmall,&#10;                        color = Color.White.copy(alpha = 0.8f),&#10;                        textAlign = TextAlign.Center&#10;                    )&#10;                }&#10;            }&#10;            Spacer(modifier = Modifier.weight(1f))&#10;        }&#10;    }&#10;}&#10;&#10;@Preview(showBackground = true)&#10;@Composable&#10;fun InicioPreview() {&#10;    Inicio(&#10;        usuario = Usuario(&#10;            id = 1,&#10;            nombre = &quot;Juan&quot;,&#10;            apellido = &quot;Pérez&quot;,&#10;            correo = &quot;s@ucol.mx&quot;,&#10;            contrasena = &quot;password123&quot;&#10;        )&#10;    )&#10;}&#10;" />
              <option name="updatedContent" value="package com.narmocorp.satorispa.views&#10;&#10;import androidx.compose.foundation.Image&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.shape.CircleShape&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material3.*&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.Notifications&#10;import androidx.compose.material.icons.filled.Settings&#10;import androidx.compose.material.icons.filled.AccountCircle&#10;import androidx.compose.material.icons.filled.Home&#10;import androidx.compose.material.icons.filled.DateRange&#10;import androidx.compose.material.icons.filled.RoomService&#10;import androidx.compose.material.icons.filled.Nfc&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.clip&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.res.painterResource&#10;import androidx.compose.ui.text.font.FontWeight&#10;import androidx.compose.ui.text.style.TextAlign&#10;import androidx.compose.ui.text.style.TextOverflow&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.dp&#10;import androidx.compose.ui.unit.sp&#10;import com.narmocorp.satorispa.R&#10;import com.narmocorp.satorispa.models.Usuario&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun Inicio(&#10;    modifier: Modifier = Modifier,&#10;    usuario: Usuario? = null,&#10;    onNavigateToNotifications: (() -&gt; Unit)? = null,&#10;    onNavigateToConfig: (() -&gt; Unit)? = null&#10;) {&#10;    Scaffold(&#10;        topBar = {&#10;            TopBar(&#10;                onNavigateToNotifications = onNavigateToNotifications,&#10;                onNavigateToConfig = onNavigateToConfig&#10;            )&#10;        },&#10;        bottomBar = {&#10;            NavBar(&#10;                onHomeClick = { /* TODO: Home */ },&#10;                onServiciosClick = { /* TODO: Servicios */ },&#10;                onCitasClick = { /* TODO: Mis citas */ }&#10;            )&#10;        },&#10;        containerColor = Color.White,&#10;        modifier = modifier.fillMaxSize()&#10;    ) { innerPadding -&gt;&#10;        Column(&#10;            modifier = Modifier&#10;                .padding(innerPadding)&#10;                .fillMaxSize()&#10;                .padding(horizontal = 24.dp),&#10;            horizontalAlignment = Alignment.CenterHorizontally&#10;        ) {&#10;            Spacer(modifier = Modifier.height(32.dp))&#10;            // Avatar&#10;            Box(&#10;                modifier = Modifier&#10;                    .size(120.dp)&#10;                    .clip(CircleShape)&#10;                    .background(Color(0xffdbbba6)),&#10;                contentAlignment = Alignment.Center&#10;            ) {&#10;                Icon(&#10;                    imageVector = Icons.Default.AccountCircle,&#10;                    contentDescription = &quot;Perfil&quot;,&#10;                    tint = Color(0xff1c1b1f),&#10;                    modifier = Modifier.size(100.dp)&#10;                )&#10;            }&#10;            Spacer(modifier = Modifier.height(16.dp))&#10;            Text(&#10;                text = usuario?.nombre ?: &quot;Nombre&quot;,&#10;                style = MaterialTheme.typography.headlineSmall,&#10;                fontWeight = FontWeight.Bold,&#10;                color = Color(0xff1c1b1f)&#10;            )&#10;            Text(&#10;                text = usuario?.apellido ?: &quot;Apellido&quot;,&#10;                style = MaterialTheme.typography.titleLarge,&#10;                color = Color(0xff1c1b1f)&#10;            )&#10;            Text(&#10;                text = usuario?.correo ?: &quot;Correo&quot;,&#10;                style = MaterialTheme.typography.bodyMedium,&#10;                color = Color(0xff1c1b1f).copy(alpha = 0.7f)&#10;            )&#10;            Spacer(modifier = Modifier.height(100.dp)) // Espacio aumentado para bajar el cuadro NFC&#10;            // Card NFC&#10;            Card(&#10;                modifier = Modifier&#10;                    .fillMaxWidth()&#10;                    .height(200.dp),&#10;                shape = RoundedCornerShape(24.dp),&#10;                colors = CardDefaults.cardColors(&#10;                    containerColor = Color(0xff995d2d)&#10;                ),&#10;                elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)&#10;            ) {&#10;                Column(&#10;                    modifier = Modifier&#10;                        .fillMaxSize()&#10;                        .padding(24.dp),&#10;                    horizontalAlignment = Alignment.CenterHorizontally,&#10;                    verticalArrangement = Arrangement.SpaceBetween&#10;                ) {&#10;                    Text(&#10;                        text = &quot;Registra tu entrada&quot;,&#10;                        style = MaterialTheme.typography.titleMedium,&#10;                        fontWeight = FontWeight.Bold,&#10;                        color = Color.White&#10;                    )&#10;                    Box(&#10;                        modifier = Modifier&#10;                            .size(72.dp)&#10;                            .clip(CircleShape)&#10;                            .background(Color(0xffdbbba6)),&#10;                        contentAlignment = Alignment.Center&#10;                    ) {&#10;                        Icon(&#10;                            imageVector = Icons.Default.Nfc,&#10;                            contentDescription = &quot;NFC Icon&quot;,&#10;                            modifier = Modifier.size(42.dp),&#10;                            tint = Color(0xff1c1b1f)&#10;                        )&#10;                    }&#10;                    Text(&#10;                        text = &quot;Acerque su dispositivo al lector para realizar el registro de entrada&quot;,&#10;                        style = MaterialTheme.typography.bodySmall,&#10;                        color = Color.White.copy(alpha = 0.8f),&#10;                        textAlign = TextAlign.Center&#10;                    )&#10;                }&#10;            }&#10;            Spacer(modifier = Modifier.weight(1f))&#10;        }&#10;    }&#10;}&#10;&#10;@Preview(showBackground = true)&#10;@Composable&#10;fun InicioPreview() {&#10;    Inicio(&#10;        usuario = Usuario(&#10;            id = 1,&#10;            nombre = &quot;Juan&quot;,&#10;            apellido = &quot;Pérez&quot;,&#10;            correo = &quot;s@ucol.mx&quot;,&#10;            contrasena = &quot;password123&quot;&#10;        )&#10;    )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>