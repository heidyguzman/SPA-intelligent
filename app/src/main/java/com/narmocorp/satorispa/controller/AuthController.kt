package com.narmocorp.satorispa.controller

import com.google.firebase.auth.FirebaseAuth
import android.util.Log
import com.google.firebase.auth.EmailAuthProvider
import com.google.firebase.firestore.FirebaseFirestore
import com.google.firebase.auth.FirebaseAuthUserCollisionException

private const val TAG = "AuthController"

object AuthController {

    /**
     * Reautentica al usuario con la contrase침a actual y luego cambia la contrase침a.
     * @param contrasenaActual Contrase침a actual del usuario.
     * @param contrasenaNueva Nueva contrase침a deseada.
     * @param onSuccess Callback en caso de 칠xito.
     * @param onError Callback en caso de error (con mensaje).
     */
    fun cambiarContrasena(
        contrasenaActual: String,
        contrasenaNueva: String,
        onSuccess: () -> Unit,
        onError: (String) -> Unit
    ) {
        val auth = FirebaseAuth.getInstance()
        val user = FirebaseAuth.getInstance().currentUser

        if (user == null || user.email == null) {
            onError("No hay usuario autenticado o el correo no est치 disponible.")
            return
        }

        // 1. Crear credencial con el correo y la contrase침a actual
        val credential = EmailAuthProvider.getCredential(user.email!!, contrasenaActual)

        // 2. Reautenticar al usuario para validar la contrase침a actual
        user.reauthenticate(credential)
            .addOnSuccessListener {
                Log.d(TAG, "Reautenticaci칩n exitosa. Procediendo a cambiar contrase침a.")

                // 3. Si la reautenticaci칩n es exitosa, cambiar la contrase침a nueva
                user.updatePassword(contrasenaNueva)
                    .addOnSuccessListener {
                        Log.d(TAG, "Contrase침a cambiada exitosamente.")
                        // PASO DE SEGURIDAD CR칈TICO: CERRAR LA SESI칍N INMEDIATAMENTE
                        auth.signOut()
                        onSuccess()
                    }
                    .addOnFailureListener { e ->
                        Log.e(TAG, "Error al cambiar contrase침a", e)
                        onError("Error al cambiar la contrase침a: ${e.localizedMessage}")
                    }
            }
            .addOnFailureListener { e ->
                Log.e(TAG, "Reautenticaci칩n fallida", e)
                // Mensaje gen칠rico por seguridad (para evitar revelar si el email es correcto o no)
                onError("Contrase침a actual incorrecta. Por favor, verifica.")
            }
    }

    /**
     * Reautentica al usuario usando el token de sesi칩n actual para evitar problemas de permisos
     * y luego cambia el correo y actualiza Firestore.
     * La contrase침a actual se valida en la UI (EditarPerfilScreen) pero no se usa aqu칤.
     */
    fun cambiarCorreo(
        nuevoCorreo: String,
        contrasenaActual: String, // 游댐 VUELVE A SER NECESARIO ESTE ARGUMENTO
        onSuccess: (String) -> Unit,
        onError: (String) -> Unit
    ) {
        val auth = FirebaseAuth.getInstance()
        val user = auth.currentUser
        val firestore = FirebaseFirestore.getInstance()

        if (user == null || user.email == null || user.uid == null) {
            onError("No hay usuario autenticado.")
            return
        }

        // 1. Crear credencial con el correo y la CONTRASE칌A ACTUAL
        // Esta es la 칰nica forma de reautenticaci칩n que ha funcionado en tu entorno.
        val credential = EmailAuthProvider.getCredential(user.email!!, contrasenaActual)

        // 2. Reautenticar al usuario para validar la contrase침a actual
        user.reauthenticate(credential)
            .addOnSuccessListener {
                Log.d(TAG, "Reautenticaci칩n con contrase침a exitosa. Procediendo a cambiar el correo.")

                // 3. ACTUALIZAR CORREO en Firebase Auth
                user.updateEmail(nuevoCorreo)
                    .addOnSuccessListener {
                        Log.d(TAG, "Correo actualizado en Auth exitosamente. Procediendo a Firestore.")

                        // 4. ACTUALIZAR CORREO en Firestore
                        firestore.collection("usuarios").document(user.uid).update("correo", nuevoCorreo)
                            .addOnSuccessListener {
                                Log.d(TAG, "Correo actualizado en Firestore exitosamente.")
                                user.reload().addOnCompleteListener {
                                    onSuccess("춰Correo cambiado exitosamente!")
                                }
                            }
                            .addOnFailureListener { e ->
                                Log.e(TAG, "Error al actualizar correo en Firestore", e)
                                onError("Correo cambiado en sesi칩n, pero error al actualizar en la base de datos.")
                            }
                    }
                    .addOnFailureListener { e ->
                        Log.e(TAG, "Error al cambiar correo en Auth", e)
                        val errorMessage = when (e) {
                            is FirebaseAuthUserCollisionException -> "Ese correo ya est치 registrado por otra cuenta."
                            else -> "Error al cambiar el correo: ${e.localizedMessage}"
                        }
                        onError(errorMessage)
                    }
            }
            .addOnFailureListener { e ->
                // Mensaje gen칠rico de error si la contrase침a actual es incorrecta
                Log.e(TAG, "Fallo al reautenticar con contrase침a.", e)
                onError("Contrase침a actual incorrecta. Por favor, verifica.")
            }
    }

    fun cerrarSesion() {
        FirebaseAuth.getInstance().signOut()
        Log.d("AuthController", "Sesi칩n de usuario cerrada.")
    }
}